name: CI - Build, Push, and Deploy to EKS with Dynamic Image Tags

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: ðŸ§¾ Checkout code
        uses: actions/checkout@v4
      - name: Echo after checkout
        run: echo "âœ… Checkout done"

      - name: ðŸ”§ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Echo after Docker Buildx setup
        run: echo "âœ… Docker Buildx setup done"

      - name: ðŸ”‘ Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Echo after Docker Hub login
        run: echo "âœ… Docker Hub login done"

      - name: ðŸ“¦ Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: vipunsanjana/memorygame-frontend:${{ env.IMAGE_TAG }}
      - name: Echo after frontend image build and push
        run: echo "âœ… Frontend image build and push done with tag ${{ env.IMAGE_TAG }}"

      - name: ðŸ“¦ Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: vipunsanjana/memorygame-backend:${{ env.IMAGE_TAG }}
      - name: Echo after backend image build and push
        run: echo "âœ… Backend image build and push done with tag ${{ env.IMAGE_TAG }}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Echo after AWS credentials config
        run: echo "âœ… AWS credentials configured"

      - name: Update kubeconfig for EKS
        run: |
          echo "Updating kubeconfig for cluster demo-cluster"
          aws eks update-kubeconfig --name demo-cluster --region us-east-1
          echo "âœ… kubeconfig updated"

      - name: Update backend deployment image
        run: |
          echo "Updating backend deployment image to vipunsanjana/memorygame-backend:${{ env.IMAGE_TAG }}"
          kubectl set image deployment/memorygame-backend memorygame-backend=vipunsanjana/memorygame-backend:${{ env.IMAGE_TAG }} -n game-2048
          echo "âœ… Backend deployment updated"

      - name: Update frontend deployment image
        run: |
          echo "Updating frontend deployment image to vipunsanjana/memorygame-frontend:${{ env.IMAGE_TAG }}"
          kubectl set image deployment/memorygame-frontend memorygame-frontend=vipunsanjana/memorygame-frontend:${{ env.IMAGE_TAG }} -n game-2048
          echo "âœ… Frontend deployment updated"

      - name: Apply service and ingress manifests
        run: |
          echo "Applying backend service"
          kubectl apply -f k8s/base/backend-service.yaml
          echo "Applying frontend service"
          kubectl apply -f k8s/base/frontend-service.yaml
          echo "Applying ingress"
          kubectl apply -f k8s/base/ingress.yaml
          echo "âœ… Services and ingress applied"

      - name: Get pods status
        run: |
          kubectl get pods -n game-2048
      - name: Echo pods status fetched
        run: echo "âœ… Pods status fetched"
